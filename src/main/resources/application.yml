spring:
  data:
    mongodb:
      uri: mongodb://localhost:27017/journalDb?replicaSet=rs0
      auto-index-creation: true
    redis:
      host: localhost
      port: 6379
  application:
    name: springDemo
  mail:
    host: smtp.gmail.com
    port: 587
    username: yogantfaye@gmail.com
    password: zejl szxz srlo tfdy
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connection timeout: 5000
          timeout: 5000
          write timeout: 5000
    protocol: smtp
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.yogant.journal.*
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  #weather:
  #  api:
  #    key: "yourKey"

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: YOUR_GOOGLE_CLIENT_ID
            client-secret: YOUR_GOOGLE_CLIENT_SECRET
            redirect-uri: https://developers.google.com/oauthplayground

scheduler:
  cacheCron: 0 */5 * * * *
  emailCron: 0 0 9 ? * SUN
